apply plugin: 'com.android.model.native'

model {
    android {
        compileSdkVersion = 26
        buildToolsVersion = '26.0.0'

        defaultConfig {
            minSdkVersion.apiLevel = 21
            targetSdkVersion.apiLevel = 26
            versionCode = 1
            versionName = '1.0'
        }
        ndk {
            moduleName = 'jpeg'
            abiFilters.addAll(['armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64']) //this is default
            ldLibs.addAll(['log'])
        }

        sources {
            main {
                jni {
                    exportedHeaders {
                        srcDir "src/main/jni/"
                    }
                }
            }
        }
    }
}

// This is just copy out the header file and built lib into distribution
// directory for clint application to use; it is a small overhead of this sample:
//    both lib and app are put inside one project space [save maintenance time]
task(distributeLib, type : Copy) {
    // trigger build library
    dependsOn assemble
    into '../distribution/jpeg/'
    from('src/main/jni/') {
        include '**/*.h'
        into 'include/'
    }
    from('build/outputs/native/release/lib') {
        into 'lib/'
    }
}